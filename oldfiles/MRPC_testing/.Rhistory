install.packages("MRPC")
install.packages("MRPC")
install.packages("pcalg")
install.packages("graph")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("graph")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("graph")
install.packages("graph")
install.packages("graph")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("graph")
exit
read.csv("/1000_datasets/MRPC_truth_0_numberofdata_1000_.csv")
setwd("~/projects/CIT_Non_Linear/MRPC_testing")
read.csv("/1000_datasets/MRPC_truth_0_numberofdata_1000_.csv")
read.csv("./1000_datasets/MRPC_truth_0_numberofdata_1000_.csv")
read.csv("./1000_datasets/MRPC_truth_0_numberofdata_1000_.csv".check.names=FALSE)
?read.csv
read.table("./1000_datasets/MRPC_truth_0_numberofdata_1000_.csv".check.names=FALSE,header=TRUE,sep=",")
read.csv("./1000_datasets/MRPC_truth_0_numberofdata_1000_.csv",check.names=FALSE,header=TRUE)
a<-read.csv("./1000_datasets/MRPC_truth_0_numberofdata_1000_.csv",check.names=FALSE,header=TRUE)
View(a)
a[1,1]
a[1,2]
a["L->A"]
a[1]["L->A"]
a[1,"L->A"]
a[1,"L->B"]
if(a[1,"L->A"]==1 && a[1,"A->B"]==1)
print("causal")
ds<-read.csv("./1000_datasets/MRPC_truth_0_numberofdata_1000_.csv",check.names=FALSE,header=TRUE)
if(ds[1,"L->A"]==1 && ds[1,"A->B"]==1)
print("causal")
unique(ds)
temp=vector("list",1000)
if(ds[1,"L->A"]==1 && ds[1,"L->B"]==0 && ds[1,"A->B"]==1 && ds[1,"B->A"]==0)
temp[1]="L->A->B"
temp
temp
temp=vector(1000)
if(ds[1,"L->A"]==1 && ds[1,"L->B"]==0 && ds[1,"A->B"]==1 && ds[1,"B->A"]==0)
temp[1]="L->A->B"
temp
temp=vector(1000)
if(ds[1,"L->A"]==1 && ds[1,"L->B"]==0 && ds[1,"A->B"]==1 && ds[1,"B->A"]==0)
temp[1]="L->A->B"
#use unique to find the number of configurations which turned up in the result
temp=vector("character",1000)
if(ds[1,"L->A"]==1 && ds[1,"L->B"]==0 && ds[1,"A->B"]==1 && ds[1,"B->A"]==0)
temp[1]="L->A->B"
unique(ds)
#use unique to find the number of configurations which turned up in the result
#unique(ds)
1 %in% ds[1,]
ds[1,]
#use unique to find the number of configurations which turned up in the result
#unique(ds)
which(1 %in% ds[1,])
#use unique to find the number of configurations which turned up in the result
#unique(ds)
which(1 %in% ds[1,])
#use unique to find the number of configurations which turned up in the result
#unique(ds)
1 %in% ds[1,]
#use unique to find the number of configurations which turned up in the result
#unique(ds)
1 %in% ds[10,]
#use unique to find the number of configurations which turned up in the result
#unique(ds)
which(1 %in% ds[10,])
#use unique to find the number of configurations which turned up in the result
#unique(ds)
which(1 %in% ds[5,])
#use unique to find the number of configurations which turned up in the result
#unique(ds)
which(1 %in% ds[69,])
#use unique to find the number of configurations which turned up in the result
#unique(ds)
which(1 %in% ds[70,])
#use unique to find the number of configurations which turned up in the result
#unique(ds)
which(1 %in% ds[68,])
#use unique to find the number of configurations which turned up in the result
#unique(ds)
which(1 %in% ds[67,])
#use unique to find the number of configurations which turned up in the result
#unique(ds)
which(1 %in% ds[66,])
#use unique to find the number of configurations which turned up in the result
#unique(ds)
which(1 %in% ds[65,])
#use unique to find the number of configurations which turned up in the result
#unique(ds)
s=c(1,23,1,4,5,1)
1 %in% s
which(1 %in% s)
which(s %in% 1)
which(ds[1,] %in% 1)
paste0(labels[which(ds[1,] %in% 1)])
paste0(labels(which(ds[1,] %in% 1)))
#use unique to find the number of configurations which turned up in the result
#unique(ds)
q<-which(ds[1,] %in% 1)
labels<-colnames(ds)
labels[1]
labels[2]
labels[1,2]
labels[c(1,2)]
paste(labels[c(1,2)])
c<-paste(labels[c(1,2)])
c<-paste(labels[c(1,2)],sep = ",")
c
c<-paste(labels[c(1,2,3)],sep = ",")
labels[c(1,2,3)]
labels[c(1,2,3,4)]
labels[c(1,2,3,4,5)]
labels[c(1,2,3,4,5)]
rbind(labels[c(1,2,3,4,5)])
cbind(labels[c(1,2,3,4,5)])
rbind(labels[c(1,2,3,4,5)])
class(labels[c(1,2,3,4,5)])
as.name(labels[c(1,2,3,4,5)]))
as.name(labels[c(1,2,3,4,5)])
(labels[c(1,2,3,4,5)])
c(labels[c(1,2,3,4,5)])
c(labels[c(1,2,3,4,5)])
c(labels[[c(1,2,3,4,5)]])
c(labels[c(1,2,3,4,5)])
lapply(labels[c(1,2,3,4,5)], function(x) paste0(x[1], x[2:length(x)]))
lapply(labels[c(1,2,3,4,5)], function(x) paste0(x[1:length(x)]))
paste(labels[c(1,2,3,4,5)], collapse = '')
paste(labels[c(1,2,3,4,5)], collapse = '',sep = "_")
paste(labels[c(1,2,3,4,5)])
paste(labels[c(1,2,3,4,5)],sep="_")
paste(unlist(labels[c(1,2,3,4,5)]),sep="_")
paste0(unlist(labels[c(1,2,3,4,5)]),sep="_")
paste0(unlist(labels[c(1,2,3,4,5)]),sep="_")
paste0(unlist(labels[c(1,2,3,4,5)]),sep="-")
paste0(unlist(labels[c(1,2,3,4,5)]),sep="-")
paste0(unlist(labels[c(1,2,3,4,5)]),sep="-")
paste0(labels[c(1,2,3,4,5)],sep="-")
d<-c(labels[c(1,2,3,4,5)])
paste0(d,sep="-")
paste0(unlist(d),sep="-")
paste0(unlist(d),sep="-",collapse = "-")
paste0(unlist(d),collapse = "-")
paste0(unlist(d),collapse = ",")
temp[1]<-paste0(unlist(labels[which(ds[1,] %in% 1)]),collapse=",")
temp[1]
apply(ds,1,function(x) paste0(unlist(labels[which(x %in% 1)]),collapse=","))
lapply(ds,1,function(x) paste0(unlist(labels[which(x %in% 1)]),collapse=","))
lapply(ds,function(x) paste0(unlist(labels[which(x %in% 1)]),collapse=","))
apply(ds,1,function(x) paste0(unlist(labels[which(x %in% 1)]),collapse=","))
class(apply(ds,1,function(x) paste0(unlist(labels[which(x %in% 1)]),collapse=",")))
ds$model<-apply(ds,1,function(x) paste0(unlist(labels[which(x %in% 1)]),collapse=","))
View(ds)
setwd("~/projects/CIT_Non_Linear/MRPC_testing")
source('~/projects/CIT_Non_Linear/MRPC_testing/mrpc_run.R')
ds<-read.csv("./1000_datasets/MRPC_truth_0_numberofdata_1000_.csv",check.names=FALSE,header=TRUE)
ds<-read.csv("./1000_datasets/MRPC_truth_0_numberofdata_1000_.csv",check.names=FALSE,header=TRUE)
#temp=vector("character",1000)
#ds$model<-apply(ds,1,function(x) paste0(unlist(labels[which(x %in% 1)]),collapse=","))
unique(ds$model)
ds<-read.csv("./1000_datasets/MRPC_truth_1_numberofdata_1000_.csv",check.names=FALSE,header=TRUE)
#temp=vector("character",1000)
#ds$model<-apply(ds,1,function(x) paste0(unlist(labels[which(x %in% 1)]),collapse=","))
unique(ds$model)
ds<-read.csv("./1000_datasets/MRPC_truth_0_numberofdata_1000_.csv",check.names=FALSE,header=TRUE)
#temp=vector("character",1000)
#ds$model<-apply(ds,1,function(x) paste0(unlist(labels[which(x %in% 1)]),collapse=","))
unique(ds$model)
ds<-read.csv("./1000_datasets/MRPC_truth_1_numberofdata_1000_.csv",check.names=FALSE,header=TRUE)
#temp=vector("character",1000)
#ds$model<-apply(ds,1,function(x) paste0(unlist(labels[which(x %in% 1)]),collapse=","))
unique(ds$model)
