p_TG<-c(p_TG,"NA")
p_GL<-c(p_GL,"NA")
p_Lind<-c(p_Lind,"NA")
p_res<-c(p_res,"NA")
}
)}
df <- data.frame(p_cit,p_TL,p_TG,p_GL,p_Lind,p_res)
View(df)
p_cit<-vector("num",10)
p_cit<-vector("number",10)
?numeric
p_cit<-numeric(10)
p_cit[:]=-1
p_cit=-1
p_cit
p_cit<-numeric(10)
p_cit[1:10]=-1
p_res<-character(10)
p_res
p_res[1:10]="NA"
library(cit)
inputs=125
read_data<-function(path)
{
dataset<- vector("list", inputs)
con = file(path, "r")
for (i in 1:inputs)
{
line = readLines(con, n = 1)
line = readLines(con, n = 1)
line_edit<-unlist(strsplit(line," "))
l<-as.vector(as.numeric(line_edit))
line = readLines(con, n = 1)
line_edit<-unlist(strsplit(line," "))
a<-as.vector(as.numeric(line_edit))
line = readLines(con, n = 1)
line_edit<-unlist(strsplit(line," "))
b<-as.vector(as.numeric(line_edit))
dataset[[i]]<-list(l,a,b)
}
close(con)
return (dataset)
}
dataset_linear<- read_data("../testing_writingvalues_half_bola.txt")
p_cit<-numeric(inputs)
p_cit[1:inputs]=-1
p_TL<- numeric(inputs)
p_TL[1:inputs]=-1
p_TG<- numeric(inputs)
p_TG[1:inputs]=-1
p_GL<- numeric(inputs)
p_GL[1:inputs]=-1
p_Lind<- numeric(inputs)
p_Lind[1:inputs]=-1
p_TG<-numeric(inputs)
p_res<-character(inputs)
p_res[1:inputs]="NA"
for(i in 1:inputs)
{
try(
{
temp<-as.data.frame(dataset_linear[[i]],check.rows=FALSE,check.cols=FALSE,col.names=c("L","A","B"))
L<-temp[,1]
A<- temp[,2]
B<- temp[,3]
t<-cit.cp(L,A,B)
#t<-cit.cp(L,B,A)
p_cit<-c(p_cit,t[1])
p_TL<-c(p_TL,t[2])
p_TG<-c(p_TG,t[3])
p_GL<-c(p_GL,t[4])
p_Lind<-c(p_Lind,t[5])
print(t[1])
if(!is.na(t[1]) && t[1]<0.05)
{
p_res<-c(p_res,"causal")
}
else
p_res<-c(p_res," ")
}
)}
library(cit)
inputs=125
read_data<-function(path)
{
dataset<- vector("list", inputs)
con = file(path, "r")
for (i in 1:inputs)
{
line = readLines(con, n = 1)
line = readLines(con, n = 1)
line_edit<-unlist(strsplit(line," "))
l<-as.vector(as.numeric(line_edit))
line = readLines(con, n = 1)
line_edit<-unlist(strsplit(line," "))
a<-as.vector(as.numeric(line_edit))
line = readLines(con, n = 1)
line_edit<-unlist(strsplit(line," "))
b<-as.vector(as.numeric(line_edit))
dataset[[i]]<-list(l,a,b)
}
close(con)
return (dataset)
}
dataset_linear<- read_data("../testing_writingvalues_half_bola.txt")
p_cit<-numeric(inputs)
p_cit[1:inputs]=-1
p_TL<- numeric(inputs)
p_TL[1:inputs]=-1
p_TG<- numeric(inputs)
p_TG[1:inputs]=-1
p_GL<- numeric(inputs)
p_GL[1:inputs]=-1
p_Lind<- numeric(inputs)
p_Lind[1:inputs]=-1
p_TG<-numeric(inputs)
p_res<-character(inputs)
p_res[1:inputs]="NA"
for(i in 1:inputs)
{
print(i)
try(
{
temp<-as.data.frame(dataset_linear[[i]],check.rows=FALSE,check.cols=FALSE,col.names=c("L","A","B"))
L<-temp[,1]
A<- temp[,2]
B<- temp[,3]
t<-cit.cp(L,A,B)
#t<-cit.cp(L,B,A)
p_cit[i]<-t[1]
p_TL[i]<-t[2]
p_TG[i]<-t[3]
p_GL[i]<-t[4]
p_Lind[i]<-t[5]
if( t[1]<0.05)
{
p_res[i]<<-"causal"
}
else
p_res[i]<-" "
}
)}
p_res[2]
p_res[2]<-
"causal"
p_res[2]
dataset_linear<- read_data("../testing_writingvalues_half_bola.txt")
p_cit<-numeric(inputs)
p_cit[1:inputs]=-1
p_TL<- numeric(inputs)
p_TL[1:inputs]=-1
p_TG<- numeric(inputs)
p_TG[1:inputs]=-1
p_GL<- numeric(inputs)
p_GL[1:inputs]=-1
p_Lind<- numeric(inputs)
p_Lind[1:inputs]=-1
p_TG<-numeric(inputs)
p_res<-character(inputs)
p_res[1:inputs]="NA"
for(i in 1:inputs)
{
print(i)
try(
{
temp<-as.data.frame(dataset_linear[[i]],check.rows=FALSE,check.cols=FALSE,col.names=c("L","A","B"))
L<-temp[,1]
A<- temp[,2]
B<- temp[,3]
t<-cit.cp(L,A,B)
#t<-cit.cp(L,B,A)
p_cit[i]<-t[1]
p_TL[i]<-t[2]
p_TG[i]<-t[3]
p_GL[i]<-t[4]
p_Lind[i]<-t[5]
if( t[1]<0.05)
{
p_res[i]<-"causal"
}
else
p_res[i]<-" "
}
)}
df <- data.frame(p_cit,p_TL,p_TG,p_GL,p_Lind,p_res)
View(df)
dataset_linear<- read_data("../testing_writingvalues_half_bola.txt")
p_cit<-numeric(inputs)
p_cit[1:inputs]=-1
p_TL<- numeric(inputs)
p_TL[1:inputs]=-1
p_TG<- numeric(inputs)
p_TG[1:inputs]=-1
p_GL<- numeric(inputs)
p_GL[1:inputs]=-1
p_Lind<- numeric(inputs)
p_Lind[1:inputs]=-1
p_TG<-numeric(inputs)
p_res<-character(inputs)
p_res[1:inputs]="NA"
for(i in 1:inputs)
{
print(i)
try(
{
temp<-as.data.frame(dataset_linear[[i]],check.rows=FALSE,check.cols=FALSE,col.names=c("L","A","B"))
L<-temp[,1]
A<- temp[,2]
B<- temp[,3]
t<-cit.cp(L,A,B)
print(t[3])
#t<-cit.cp(L,B,A)
p_cit[i]<-t[1]
p_TL[i]<-t[2]
p_TG[i]<-t[3]
p_GL[i]<-t[4]
p_Lind[i]<-t[5]
if( t[1]<0.05)
{
p_res[i]<-"causal"
}
else
p_res[i]<-" "
}
)}
df <- data.frame(p_cit,p_TL,p_TG,p_GL,p_Lind,p_res)
dataset_linear<- read_data("../testing_writingvalues_half_bola.txt")
p_cit<-numeric(inputs)
p_cit[1:inputs]=-1
p_TL<- numeric(inputs)
p_TL[1:inputs]=-1
p_TG<- numeric(inputs)
p_TG[1:inputs]=-1
p_GL<- numeric(inputs)
p_GL[1:inputs]=-1
p_Lind<- numeric(inputs)
p_Lind[1:inputs]=-1
p_res<-character(inputs)
p_res[1:inputs]="NA"
for(i in 1:inputs)
{
print(i)
try(
{
temp<-as.data.frame(dataset_linear[[i]],check.rows=FALSE,check.cols=FALSE,col.names=c("L","A","B"))
L<-temp[,1]
A<- temp[,2]
B<- temp[,3]
t<-cit.cp(L,A,B)
print(t[3])
#t<-cit.cp(L,B,A)
p_cit[i]<-t[1]
p_TL[i]<-t[2]
p_TG[i]<-t[3]
p_GL[i]<-t[4]
p_Lind[i]<-t[5]
if( t[1]<0.05)
{
p_res[i]<-"causal"
}
else
p_res[i]<-" "
}
)}
df <- data.frame(p_cit,p_TL,p_TG,p_GL,p_Lind,p_res)
write.csv(df,"result_half_bola.csv",row.names = FALSE)
dataset_linear<- read_data("../testing_writingvalues_half_V.txt")
p_cit<-numeric(inputs)
p_cit[1:inputs]=-1
p_TL<- numeric(inputs)
p_TL[1:inputs]=-1
p_TG<- numeric(inputs)
p_TG[1:inputs]=-1
p_GL<- numeric(inputs)
p_GL[1:inputs]=-1
p_Lind<- numeric(inputs)
p_Lind[1:inputs]=-1
p_res<-character(inputs)
p_res[1:inputs]="NA"
for(i in 1:inputs)
{
print(i)
try(
{
temp<-as.data.frame(dataset_linear[[i]],check.rows=FALSE,check.cols=FALSE,col.names=c("L","A","B"))
L<-temp[,1]
A<- temp[,2]
B<- temp[,3]
t<-cit.cp(L,A,B)
print(t[3])
#t<-cit.cp(L,B,A)
p_cit[i]<-t[1]
p_TL[i]<-t[2]
p_TG[i]<-t[3]
p_GL[i]<-t[4]
p_Lind[i]<-t[5]
if( t[1]<0.05)
{
p_res[i]<-"causal"
}
else
p_res[i]<-" "
}
)}
df <- data.frame(p_cit,p_TL,p_TG,p_GL,p_Lind,p_res)
write.csv(df,"result_half_V.csv",row.names = FALSE)
View(df)
dataset_linear<- read_data("../testing_writingvalues_half_heaviside.txt")
p_cit<-numeric(inputs)
p_cit[1:inputs]=-1
p_TL<- numeric(inputs)
p_TL[1:inputs]=-1
p_TG<- numeric(inputs)
p_TG[1:inputs]=-1
p_GL<- numeric(inputs)
p_GL[1:inputs]=-1
p_Lind<- numeric(inputs)
p_Lind[1:inputs]=-1
p_res<-character(inputs)
p_res[1:inputs]="NA"
for(i in 1:inputs)
{
print(i)
try(
{
temp<-as.data.frame(dataset_linear[[i]],check.rows=FALSE,check.cols=FALSE,col.names=c("L","A","B"))
L<-temp[,1]
A<- temp[,2]
B<- temp[,3]
t<-cit.cp(L,A,B)
#t<-cit.cp(L,B,A)
p_cit[i]<-t[1]
p_TL[i]<-t[2]
p_TG[i]<-t[3]
p_GL[i]<-t[4]
p_Lind[i]<-t[5]
if( t[1]<0.05)
{
p_res[i]<-"causal"
}
else
p_res[i]<-" "
}
)}
df <- data.frame(p_cit,p_TL,p_TG,p_GL,p_Lind,p_res)
write.csv(df,"result_half_heaviside.csv",row.names = FALSE)
dataset_linear<- read_data("../testing_writingvalues_half_sine.txt")
p_cit<-numeric(inputs)
p_cit[1:inputs]=-1
p_TL<- numeric(inputs)
p_TL[1:inputs]=-1
p_TG<- numeric(inputs)
p_TG[1:inputs]=-1
p_GL<- numeric(inputs)
p_GL[1:inputs]=-1
p_Lind<- numeric(inputs)
p_Lind[1:inputs]=-1
p_res<-character(inputs)
p_res[1:inputs]="NA"
for(i in 1:inputs)
{
print(i)
try(
{
temp<-as.data.frame(dataset_linear[[i]],check.rows=FALSE,check.cols=FALSE,col.names=c("L","A","B"))
L<-temp[,1]
A<- temp[,2]
B<- temp[,3]
t<-cit.cp(L,A,B)
#t<-cit.cp(L,B,A)
p_cit[i]<-t[1]
p_TL[i]<-t[2]
p_TG[i]<-t[3]
p_GL[i]<-t[4]
p_Lind[i]<-t[5]
if( t[1]<0.05)
{
p_res[i]<-"causal"
}
else
p_res[i]<-" "
}
)}
df <- data.frame(p_cit,p_TL,p_TG,p_GL,p_Lind,p_res)
write.csv(df,"result_half_sine.csv",row.names = FALSE)
inputs=62296
read_data<-function(path)
{
dataset<- vector("list", inputs)
con = file(path, "r")
for (i in 1:inputs)
{
line = readLines(con, n = 1)
line = readLines(con, n = 1)
line_edit<-unlist(strsplit(line," "))
l<-as.vector(as.numeric(line_edit))
line = readLines(con, n = 1)
line_edit<-unlist(strsplit(line," "))
a<-as.vector(as.numeric(line_edit))
line = readLines(con, n = 1)
line_edit<-unlist(strsplit(line," "))
b<-as.vector(as.numeric(line_edit))
dataset[[i]]<-list(l,a,b)
}
close(con)
return (dataset)
}
library(reticulate)
install.packages("reticulate")
library(reticulate)
import("pandas")
n
source_python("pickle_reader.py")
read_pickle_file("../../thirdApproach/indicesUsed.pkl")
indices_used<-read_pickle_file("../../thirdApproach/indicesUsed.pkl")
dataset_linear<- read_data("../../../yeast_full_data/yeast_residual_data_full_62k_gt1.txt")
dataset_linear<- dataset_linear[indices_used]
indices_used<-read_pickle_file("../../thirdApproach/indicesUsed.pkl")
length(indices_used)
View(dataset_linear)
dataset_linear[10000]
dataset_linear[[10000]]
dataset_linear[[9999]]
dataset_yeast<- read_data("../../../yeast_full_data/yeast_residual_data_full_62k_gt1.txt")
dataset_linear<- dataset_yeast[indices_used]
dataset_linear<- dataset_yeast[indices_used]
indices_used<=62296
sum(indices_used<=62296)
indices_used
indices_used==NA
indices_used
indices_used[10000]
unique(indices_used)
length(unique(indices_used))
dataset_linear<- dataset_yeast[indices_used]
length(dataset_linear)
View(dataset_linear)
dataset_linear<- dataset_yeast[[indices_used]]
dataset_linear<- dataset_yeast[indices_used]
View(dataset_yeast)
dataset_linear<- dataset_yeast[indices_used[1:10000]]
dataset_linear<- dataset_yeast[indices_used[1:10000]]
dataset_linear<- dataset_yeast[indices_used[1:10000]]
length(dataset_yeast)
sum(indices_used<=62996 and indices_used>=1)
sum(indices_used<=62996 && indices_used>=1)
sum( indices_used>=1)
indices_used==0
sum(indices_used==0)
indices_used+1
indices_used
indices_used+1
indices_used
#adding +1 since R is 1 indexed
indices_used<-indices_used+1
dataset_linear<- dataset_yeast[indices_used[1:10000]]
inputs=10000
p_cit<-numeric(inputs)
p_cit[1:inputs]=-1
p_TL<- numeric(inputs)
p_TL[1:inputs]=-1
p_TG<- numeric(inputs)
p_TG[1:inputs]=-1
p_GL<- numeric(inputs)
p_GL[1:inputs]=-1
p_Lind<- numeric(inputs)
p_Lind[1:inputs]=-1
p_res<-character(inputs)
p_res[1:inputs]="NA"
for(i in 1:inputs)
{
print(i)
try(
{
temp<-as.data.frame(dataset_linear[[i]],check.rows=FALSE,check.cols=FALSE,col.names=c("L","A","B"))
L<-temp[,1]
A<- temp[,2]
B<- temp[,3]
t<-cit.cp(L,A,B)
#t<-cit.cp(L,B,A)
p_cit[i]<-t[1]
p_TL[i]<-t[2]
p_TG[i]<-t[3]
p_GL[i]<-t[4]
p_Lind[i]<-t[5]
if( t[1]<0.05)
{
p_res[i]<-"causal"
}
else
p_res[i]<-" "
}
)}
df <- data.frame(p_cit,p_TL,p_TG,p_GL,p_Lind,p_res)
write.csv(df,"result_yeast10kcausal.csv",row.names = FALSE)
write.csv(df,"result_yeast10kcausal.csv",row.names=TRUE)
View(dataset_yeast)
View(df)
dataset_yeast
dataset_linear
write.csv(df,"result_yeast10kcausal.csv",row.names=FALSE)
dataset_linear[[10]][[1]]
plot(dataset_linear[[10]][[1]],dataset_linear[[10]][[2]])
plot(dataset_linear[[10]][[2]],dataset_linear[[10]][[3]])
plot(dataset_linear[[13]][[2]],dataset_linear[[13]][[3]])
plot(dataset_linear[[11]][[2]],dataset_linear[[12]][[3]])
plot(dataset_linear[[11]][[2]],dataset_linear[[11]][[3]])
plot(dataset_linear[[33]][[2]],dataset_linear[[33]][[3]])
plot(dataset_linear[[58]][[2]],dataset_linear[[58]][[3]])
save(dataset_linear,"yeast10k.Rdata")
View(dataset_linear)
save(dataset_linear,file="yeast10k.Rdata")
